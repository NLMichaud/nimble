# A list of bugs, desired features, possible changes to the system, etc.
# please list with newest issues at the top

* (12/3/14) Cannot copy from one row of a modelValues into another row of the same modelValues. This is a result of the C execution of nimCopy setting the row of the
‘to’ and ‘from’ argument. Could be handled by having a special call that copies to
intermediate variable, similar to Eigen’s ‘transposeInPlace’

* (10/23/14) expansion of RHSonly nodes into their scalar components (this is done by default for all RHSonly nodes) causes a huge increase in the time for building a modelDef, when RHSonly nodes include a large, constant matrix.  e.g. NxN for N=200, takes a very long time.  Might consider not fully expaninds RHSonly nodes to their components.  Not sure why this was important to do, in retrospect (DT).

* (10/23/14) Interested in having nimble$unload() available, since bumping up against the max number of dynamically loaded libraries in R (100?).  This hampers any big-scale automation with NIMBLE.

* (10/5/14) we don't detect conjugacy when we have a scalar node w/ a N prior that is in the mean for a MVN dependent node (e.g. beta0 in 'jaw')

* (10/1/14) Chris requests something like getVars() that returns all the variable names in a model or a subset of variables if one passes in a set of nodes

* (9/28/14) R's %% and C's fmod() differ when have, e.g., -0.8 %% 1 -- R gives 0.2, and C gives -0.8; one gross way to 'fix' would be to give an error if negative numbers are supplied

* (9/27/14 - possible "heavy debug/check" compilation mode.

* (9/14/14) norm() in R and C nimble functions differ as the R default seems to be the "1" norm (the 'type' argument) and the C version is the Frobenius

* (9/4/14)  handle for-loop indexes consistent with BUGS & jags.  e.g., for(i in 1:3+1) {}, should give lowest precendence to the ':' operator

* (8/11/14) deal more elegantly with metropolis samples that fall outside the domain of a parameter - e.g. proposals for positive valued parameters that are proposed to be negative

* (7/31/14) simulate(model, 'multivariateNodeName[1:10]') fails, because the multivariateNodeName is *incorrectly* expanded, none of which are names of model nodes

* (7/24/14) Using 'equals(a,b)' in a model definition, when both a, b are constants, (correctly) attempts to evaluate 'equals(a,b)' at compile-time, but this errors-out because 'equals' refers to function in testthat package, rather than the intended 'nimbleEquals()' function.

* (7/10/14) Revisit model-querying functions: e.g. getParents, get size infor from a model (extract from varInfo$maxes), others?

* (7/10/14) Revisit linear algebra functionality, e.g. svd, eigen, others?

* (7/10/14) Revisit use of `$` notation in the DSL.  This would break in normal R execution unless it is intercepted during nimbleFunction definition.

* (7/10/14) Make simulate() default to including deterministic dependencies

* (7/10/14) Multivariate default samplers. Multivariate conjugate samplers.

* (7/10/14) Revisit efficiency of processing of node sets, especially arising from newSetupCode.

* (7/10/14) Research CppAD/TMB/STAN code generation for automatic differentiation.

* (7/10/14) More profiling

* (7/10/14) Make run-time checking of Gibbs (conjugate) validity optional.

* (7/10/14) Possible bug from state-space model case: incorrect conjugacy determination.

* (7/10/14) Run some proper timing comparisons with MCMC suite, with run-time conjugate validity checking disabled.

* (7/10/14) 1D Laplace and AGQ

* (7/10/14) Generate "q" and "p" functions

* (7/10/14) Make multiple parameterizations of distributions and default parameters available from the DSL.  This could be a time to create a general way of handling R-like argument processing.

* (7/10/14) Fill in missing distributions

* (7/10/14) Censoring: dinterval, I(), T(), etc.

* (7/10/14) Make the inverse of as.matrix for a modelValues

* (7/10/14) Fix length(model[[var]])

* (6/27/14) possible error when compiling nf2 checks in functinalityChecks.R in manual directory

* (6/27/14) using 'step' in data block of bugs model fails because we now use nimbleStep, so not backwards compatible... minor issue we may want to ignore so as not to mask R's step

* (6/27/14) should we change nimbleStep to nimStep to be consistent with nimPrint, nimCopy, etc.?

* (6/26/14) might be nice to have a nodeNamesToVarNames function (and maybe the reverse?); I think this came up as Chris was trying to write a nf for the manual intro example 

* (6/22/14) add citations for our block RW (and maybe slice?) sampler algos in the manual

* (6/22/14) checking of pos-def for Chol, det, etc. and how to handle numerically non-p.d. matrices and pivoting

* (6/21/14) disable det,fact,gamma as numerically unstable?

* (6/20/14) additional helper fxns for manipulating models: getParents(), get size info from a model (extract from varInfo$maxes)

* (6/19/14) handle initialization of nodes created by link functions - e.g. log(p) ~ dnorm() and a user initializes "p" but we need to initialize log_p as well

* (6/16/14) probably good to provide svd in DSL before long

* (6/16/14) change scalar | and & to || and && ?

* (6/11/14) add getPositions() functionality (DT)

* (6/9/14) NaN warnings in R for RW samplers that go beyond domain of a given parameter (e.g., negative proposals for positive-valued params)

* (6/8/14) (CP) eventually release our C/R new distribution functions (d and r functions) as a separate R pkg?

* (6/7/14) (DT) strange printout from MCMCspec(); using blocker as example with default spec, dnorm conjugacy message is formatted oddly (multiple "dependents_dnorm" and some ", ,":
[23] conjugate_norm sampler;   targetNode: d,  dependents_dnorm: c(\delta[1]\, \delta[2]\, \delta[3]\, \delta[4]\, \delta[5]\, , dependents_dnorm: \delta[6]\, \delta[7]\, \delta[8]\, \delta[9]\, \delta[10]\, , dependents_dnorm: \delta[11]\, \delta[12]\, \delta[13]\, \delta[14]\, \delta[15]\, , dependents_dnorm: \delta[16]\, \delta[17]\, \delta[18]\, \delta[19]\, \delta[20]\, , dependents_dnorm: \delta[21]\, \delta[22]\, \delta.new\)

* (6/7/14) (CP/DT) finish special case conj samplers, e.g. exp is gamma, unif is beta, chisq is gamma, etc.

* (6/7/14) (CP/DT) we might want a version of getNodeNames that returns nodes that are the top of the graph (those without any stochastic parents)

* (6/6/14) [DT] change MCMC to have two separate thinning intervals (rather than thin1=1, and thin2 artibrary)

* (6/5/14) add ability to deal with empty indices in calculate, simulate, etc., e.g.
calculate(model, 'x[i, ]') 

* [DT/CP] (6/5/14) transform DT's conjugacy check embedded within code with flag into packages/nimble/inst/tests/test-conjugacy.R

* (6/5/14) when compile a model get this warning:
Warning message:
In getPackageName(where) :
  Created a package name, ‘2014-06-05 08:24:46’, when none found

* (6/5/14) calculate and simulate do not allow empty indexing, unlike get and setting values of nodes:
Cmodel[['y[1,]']] is fine
calculate(Cmodel, 'y[1,]') is not 

* (6/5/14) (DT/CP) desire to use 'constants' in 'dimensions' argument, e.g: BUGSmodel(model, constants = list(N = 5), dimensions = list(x = c(N,N))); DT had this and removed it as it was causing some other problem; might revisit this
